@page "/login"
@namespace StackTrack.Models
@inject NavigationManager Navigation
@inject Supabase.Client SupabaseClient

<PageTitle>Login</PageTitle>
<div class="login-wrapper">
    <MudImage Class="logo-image" ObjectFit="ObjectFit.Contain" Width="250" Height="250" Src="images/logo2.png" Alt="logo" Elevation="0" />
    <div class="login-container">
       

    <EditForm Model="@UserLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />



            <MudTextField Class="d-flex py-2" @bind-Value="UserLogin.Email" Variant="Variant.Filled" Label="Email" />
            <ValidationMessage For="@(() => UserLogin.Email)" />

            <MudTextField Class="d-flex py-2" @bind-Value="UserLogin.Password" Label="Password" Variant="Variant.Filled" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" />
            <ValidationMessage For="@(() => UserLogin.Password)" />
 
        <MudPaper Class="d-flex flex-grow-1 gap-1 " Elevation="0">
                    <MudButton Class="py-3 d-inline-flex flex-1" OnClick="RedirectToSignUp" Variant="Variant.Filled" Color="Color.Secondary"><MudText>Sign Up</MudText></MudButton>
            <MudButton Class="py-3 d-inline-flex flex-1"  Disabled="@_processing" OnClick="HandleLogin" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Login</MudText>
                }
            </MudButton>

        </MudPaper>
    </EditForm>
</div>
</div>

@code
{
    private User UserLogin = new User();

    private void RedirectToSignUp()
    {
        Navigation.NavigateTo("/signup");
    }

    ObjectFit ImageFit = ObjectFit.Cover;

    void SetImageFit(ObjectFit value)
    {
        ImageFit = value;
    }
    private async Task HandleLogin()
    {
        await ProcessSomething();


        try
        {
            var session = await SupabaseClient.Auth.SignIn(UserLogin.Email, UserLogin.Password);
            if (session.User != null)
            {
                Console.WriteLine($"Login successful for user: {session.User.Email}");
                Navigation.NavigateTo("/home");
            }

        }
        catch (Exception ex)
        {

            Console.Error.WriteLine($"Login error: {ex}");
        }
    }

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonTestclick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private bool _processing = false;

    async Task ProcessSomething()
    {
        _processing = true;
        await Task.Delay(2000);
        _processing = false;
    }
}