@page "/login"
@namespace StackTrack.Models
@inject NavigationManager Navigation
@inject Supabase.Client SupabaseClient

<PageTitle>Login</PageTitle>

<div class="login-container">
    <h3>Login to StackTrack</h3>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }

    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="loginModel.Email" />
            <ValidationMessage For="@(() => loginModel.Email)" />
        </div>

        <div class="form-group">
            <label>Password</label>
            <InputText class="form-control" @bind-Value="loginModel.Password" type="password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>
        <div >
        <button type="submit" class="btn btn-primary" disabled="@isLoading">
            @if (isLoading)
            {
                <span>Logging in...</span>
            }
            else
            {
                <span>Login</span>
            }
        </button>
        <button type="button" class="btn btn-secondary" onclick="@RedirectToSignUp">Sign Up</button>
        </div>
    </EditForm>
</div>

@code
{
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    private void RedirectToSignUp()
    {
        Navigation.NavigateTo("/signup");
    }
    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var session = await SupabaseClient.Auth.SignIn(loginModel.Email, loginModel.Password);
            if (session.User != null)
            {
                Console.WriteLine($"Login successful for user: {session.User.Email}");
                Navigation.NavigateTo("/home");
            }
            else
            {
                errorMessage = "Authentication failed. Please check your credentials.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Login failed: {ex.Message}";
            Console.Error.WriteLine($"Login error: {ex}");
        }
        finally
        {
            isLoading = false;
        }
    }
}