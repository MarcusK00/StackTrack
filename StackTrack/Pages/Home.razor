@page "/home"

@using MudBlazor
@using System.Globalization
@inject Supabase.Client SupabaseClient
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Dashboard - StackTrack</PageTitle>

<MudLayout>
    <MudAppBar Elevation="3" Color="Color.Primary" Dense="true" Fixed="false">
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        </MudHidden>
        <MudText Typo="Typo.h6" Class="ml-2">
            <MudIcon Icon="@Icons.Material.Filled.FitnessCenter" Class="mr-2" />
            StackTrack
        </MudText>
        <MudSpacer />
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudTooltip Text="Start New Workout">
                <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Inherit" OnClick="@StartNewWorkout" />
            </MudTooltip>
            <MudTooltip Text="View Profile">
                <MudIconButton Icon="@Icons.Material.Filled.Person" Color="Color.Inherit" />
            </MudTooltip>
        </MudHidden>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End">
            <MudMenuItem OnClick="@(() => Navigation.NavigateTo("/settings"))">Settings</MudMenuItem>
            <MudMenuItem OnClick="@Logout">Logout</MudMenuItem>
        </MudMenu>
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="2" Variant="@DrawerVariant.Temporary" ClipMode="DrawerClipMode.Always">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">StackTrack</MudText>
        </MudDrawerHeader>
        <MudNavMenu Color="Color.Primary" Bordered="true" Class="mud-width-full">
            <MudNavLink Href="/home" Icon="@Icons.Material.Filled.Dashboard" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="/workout/new" Icon="@Icons.Material.Filled.FitnessCenter">Start Workout</MudNavLink>
            <MudNavLink Href="/history" Icon="@Icons.Material.Filled.History">Workout History</MudNavLink>
            <MudNavLink Href="/exercises" Icon="@Icons.Material.Filled.List">My Exercises</MudNavLink>
            <MudNavLink Href="/analytics" Icon="@Icons.Material.Filled.BarChart">Analytics</MudNavLink>
            <MudDivider Class="my-2" />
            <MudNavLink Href="/settings" Icon="@Icons.Material.Filled.Settings">Settings</MudNavLink>
            <MudNavLink OnClick="Logout" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent Class="pt-2 px-2">
        <MudContainer MaxWidth="MaxWidth.Large">
            <!-- Welcome Section with Workout Recommendation -->
            <MudPaper Elevation="0" Class="pa-4 mb-4 rounded-lg" Style="background: linear-gradient(135deg, var(--mud-palette-primary-lighten), var(--mud-palette-primary));">
                <MudGrid>
                    <MudItem xs="12" sm="8">
                        <MudText Typo="Typo.h5" Color="Color.Surface">Welcome back, @userName!</MudText>
                        <MudText Typo="Typo.body1" Color="Color.Surface" Class="mb-2">
                            @GetMotivationalMessage()
                        </MudText>
                        @if (isWorkoutDue)
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.PlayArrow" 
                                     OnClick="StartNewWorkout" Size="Size.Large" Class="mt-2">
                                Start Today's Workout
                            </MudButton>
                        }
                    </MudItem>
                    <MudItem xs="12" sm="4" Class="d-flex justify-end align-center">
                        <MudChip Color="Color.Surface" Size="Size.Large" Icon="@Icons.Material.Filled.Today" T="string">
                            @DateTime.Now.ToString("MMM d, yyyy")
                        </MudChip>
                    </MudItem>
                </MudGrid>
            </MudPaper>

            <MudGrid Spacing="2">
                <!-- Quick Stats Cards -->
                <MudItem xs="6" sm="3">
                    <MudPaper Elevation="2" Class="pa-4 mud-theme-primary" Style="height:100%">
                        <MudGrid>
                            <MudItem xs="8">
                                <MudText Typo="Typo.h5">@totalWorkouts</MudText>
                                <MudText Typo="Typo.caption">Total Workouts</MudText>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center align-center">
                                <MudIcon Icon="@Icons.Material.Filled.FitnessCenter" Size="Size.Large" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="6" sm="3">
                    <MudPaper Elevation="2" Class="pa-4" Style="height:100%; background-color: var(--mud-palette-success-lighten);">
                        <MudGrid>
                            <MudItem xs="8">
                                <MudText Typo="Typo.h5">@currentStreak</MudText>
                                <MudText Typo="Typo.caption">Day Streak</MudText>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center align-center">
                                <MudIcon Icon="@Icons.Material.Filled.LocalFireDepartment" Size="Size.Large" Color="Color.Error" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="6" sm="3">
                    <MudPaper Elevation="2" Class="pa-4" Style="height:100%; background-color: var(--mud-palette-info-lighten);">
                        <MudGrid>
                            <MudItem xs="8">
                                <MudText Typo="Typo.h5">@personalRecords</MudText>
                                <MudText Typo="Typo.caption">Personal Records</MudText>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center align-center">
                                <MudIcon Icon="@Icons.Material.Filled.EmojiEvents" Size="Size.Large" Color="Color.Warning" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="6" sm="3">
                    <MudPaper Elevation="2" Class="pa-4" Style="height:100%; background-color: var(--mud-palette-secondary-lighten);">
                        <MudGrid>
                            <MudItem xs="8">
                                <MudText Typo="Typo.h5">@totalExercises</MudText>
                                <MudText Typo="Typo.caption">Exercises</MudText>
                            </MudItem>
                            <MudItem xs="4" Class="d-flex justify-center align-center">
                                <MudIcon Icon="@Icons.Material.Filled.FitnessCenter" Size="Size.Large" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>

                <!-- Progress Chart -->
                <MudItem xs="12" md="8">
                    <MudCard Elevation="2">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Progress Tracking</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                                    <MudMenuItem>Last 30 days</MudMenuItem>
                                    <MudMenuItem>Last 3 months</MudMenuItem>
                                    <MudMenuItem>Last year</MudMenuItem>
                                </MudMenu>
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="py-6">
                                <MudTabPanel Text="Weight">
                                    <MudChart ChartType="ChartType.Line" 
                                             ChartSeries="@weightSeries"
                                             XAxisLabels="@progressDates" 
                                             Width="100%" Height="300px">
                                        <CustomGraphics>
                                            <MudText Typo="Typo.body2" Align="Align.Center">Weight Progress (lbs)</MudText>
                                        </CustomGraphics>
                                    </MudChart>
                                </MudTabPanel>
                                <MudTabPanel Text="Volume">
                                    <MudChart ChartType="ChartType.Bar" 
                                             ChartSeries="@volumeSeries" 
                                             XAxisLabels="@progressDates"
                                             Width="100%" Height="300px">
                                        <CustomGraphics>
                                            <MudText Typo="Typo.body2" Align="Align.Center">Weekly Volume (sets × reps × weight)</MudText>
                                        </CustomGraphics>
                                    </MudChart>
                                </MudTabPanel>
                            </MudTabs>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Sidebar Content -->
                <MudItem xs="12" md="4">
                    <!-- Next Workout Card -->
                    <MudCard Elevation="2" Class="mb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Next Scheduled Workout</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            @if (isWorkoutDue)
                            {
                                <MudAlert Severity="Severity.Info" Dense="true" Class="mb-3">Today is your workout day!</MudAlert>
                            }
                            <MudTimeline TimelinePosition="TimelinePosition.Start" TimelineAlign="TimelineAlign.Start">
                                <MudTimelineItem Color="Color.Primary" Size="Size.Small" Icon="@Icons.Material.Filled.CalendarToday">
                                    <MudText Typo="Typo.body1" Color="Color.Default">@nextWorkoutDate.ToString("dddd, MMM d")</MudText>
                                    <MudText Typo="Typo.caption">Scheduled Workout: @nextWorkoutPlan</MudText>
                                </MudTimelineItem>
                                <MudTimelineItem Color="Color.Secondary" Size="Size.Small" Icon="@Icons.Material.Filled.FitnessCenter">
                                    <MudText Typo="Typo.body2">Main focus: @nextWorkoutFocus</MudText>
                                    <MudChipSet T="string" Class="mt-2">
                                        @foreach (var exercise in nextWorkoutExercises)
                                        {
                                            <MudChip Size="Size.Small" Color="Color.Default">@exercise</MudChip>
                                        }
                                    </MudChipSet>
                                </MudTimelineItem>
                            </MudTimeline>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="StartNewWorkout">Start Now</MudButton>
                            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="@(() => Navigation.NavigateTo("/workout/plan"))">Edit Plan</MudButton>
                        </MudCardActions>
                    </MudCard>

                    <!-- Recent PRs -->
                    <MudCard Elevation="2" Class="mb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Recent PRs</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Class="pa-0">
                            <MudList T="string" Clickable="true" Dense="true">
                                @foreach (var pr in recentPRs)
                                {
                                    <MudListItem Icon="@Icons.Material.Filled.EmojiEvents" IconColor="Color.Warning">
                                        <div class="d-flex justify-space-between align-center">
                                            <div>
                                                <MudText Typo="Typo.body2">@pr.Exercise</MudText>
                                                <MudText Typo="Typo.caption">@pr.Date.ToString("MMM d")</MudText>
                                            </div>
                                            <MudText Typo="Typo.body1" Color="Color.Success" Class="font-weight-bold">@pr.Weight lbs</MudText>
                                        </div>
                                    </MudListItem>
                                }
                            </MudList>
                        </MudCardContent>
                    </MudCard>

                    <!-- Quick Actions Card -->
                    <MudCard Elevation="2">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Quick Actions</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudGrid Spacing="1">
                                <MudItem xs="6">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                                             OnClick="StartNewWorkout" FullWidth="true" 
                                             StartIcon="@Icons.Material.Filled.AddCircle">
                                        New Workout
                                    </MudButton>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" 
                                             OnClick="ViewHistory" FullWidth="true"
                                             StartIcon="@Icons.Material.Filled.History">
                                        History
                                    </MudButton>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" 
                                             OnClick="ManageExercises" FullWidth="true"
                                             StartIcon="@Icons.Material.Filled.List">
                                        Exercises
                                    </MudButton>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" 
                                             OnClick="@(() => Navigation.NavigateTo("/analytics"))" FullWidth="true"
                                             StartIcon="@Icons.Material.Filled.BarChart">
                                        Analytics
                                    </MudButton>
                                </MudItem>
                            </MudGrid>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Last Workout Summary -->
                <MudItem xs="12">
                    <MudCard Elevation="2">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Last Workout</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudTooltip Text="View Detailed History">
                                    <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" Color="Color.Default" Size="Size.Small" OnClick="ViewHistory" />
                                </MudTooltip>
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                            @if (lastWorkoutExists)
                            {
                                <MudText Typo="Typo.subtitle2" GutterBottom="true">
                                    @lastWorkoutName - @lastWorkoutDate.ToString("MMM d, yyyy")
                                </MudText>
                                <MudSimpleTable Hover="true" Dense="true" FixedHeader="true" Style="max-height: 300px">
                                    <thead>
                                        <tr>
                                            <th>Exercise</th>
                                            <th>Sets</th>
                                            <th>Reps</th>
                                            <th>Weight</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var exercise in lastWorkoutExercises)
                                        {
                                            <tr>
                                                <td>@exercise.Name</td>
                                                <td>@exercise.Sets</td>
                                                <td>@exercise.Reps</td>
                                                <td>@exercise.Weight lbs</td>
                                            </tr>
                                        }
                                    </tbody>
                                </MudSimpleTable>
                            }
                            else
                            {
                                <MudAlert Severity="Severity.Info">You haven't logged any workouts yet. Get started today!</MudAlert>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </MudMainContent>

    <!-- Add floating action button for mobile -->
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" 
               Style="position: fixed; right: 16px; bottom: 16px; z-index: 10"
               OnClick="StartNewWorkout" />
    </MudHidden>
</MudLayout>

@code {
    private bool _drawerOpen = false;
    private string userName = "Athlete";
    private bool isWorkoutDue = true;
    
    // Summary fields
    private int totalWorkouts = 28;
    private int currentStreak = 7;
    private int personalRecords = 15;
    private int totalExercises = 42;
    private DateTime nextWorkoutDate = DateTime.Today;
    private string nextWorkoutPlan = "Full Body";
    private string nextWorkoutFocus = "Strength & Hypertrophy";
    private List<string> nextWorkoutExercises = new() { "Squat", "Bench Press", "Deadlift", "Shoulder Press" };

    // Chart data
    private string[] progressDates = { "Jul 1", "Jul 8", "Jul 15", "Jul 22", "Jul 29" };
    private List<ChartSeries> weightSeries = new();
    private List<ChartSeries> volumeSeries = new();

    // Last workout data
    private bool lastWorkoutExists = true;
    private DateTime lastWorkoutDate = DateTime.Now.AddDays(-2);
    private string lastWorkoutName = "Push Day";
    
    private class ExerciseData
    {
        public string Name { get; set; }
        public int Sets { get; set; }
        public int Reps { get; set; }
        public int Weight { get; set; }
    }
    
    private class PersonalRecord
    {
        public string Exercise { get; set; }
        public int Weight { get; set; }
        public DateTime Date { get; set; }
    }
    
    private List<ExerciseData> lastWorkoutExercises = new();
    private List<PersonalRecord> recentPRs = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadUserData();
        
        // Initialize chart data
        weightSeries.Add(new ChartSeries() { Name = "Bench Press", Data = new double[] { 135, 145, 145, 155, 160 } });
        weightSeries.Add(new ChartSeries() { Name = "Squat", Data = new double[] { 185, 195, 205, 215, 225 } });
        
        volumeSeries.Add(new ChartSeries() { Name = "Weekly Volume", Data = new double[] { 15000, 16200, 17500, 16800, 18500 } });
        
        // Sample last workout data
        lastWorkoutExercises = new List<ExerciseData>
        {
            new ExerciseData { Name = "Bench Press", Sets = 4, Reps = 8, Weight = 160 },
            new ExerciseData { Name = "Incline DB Press", Sets = 3, Reps = 10, Weight = 65 },
            new ExerciseData { Name = "Cable Fly", Sets = 3, Reps = 12, Weight = 25 },
            new ExerciseData { Name = "Tricep Pushdown", Sets = 3, Reps = 15, Weight = 50 },
            new ExerciseData { Name = "Lateral Raise", Sets = 3, Reps = 12, Weight = 20 }
        };
        
        // Sample PR data
        recentPRs = new List<PersonalRecord>
        {
            new PersonalRecord { Exercise = "Bench Press", Weight = 160, Date = DateTime.Now.AddDays(-2) },
            new PersonalRecord { Exercise = "Squat", Weight = 225, Date = DateTime.Now.AddDays(-5) },
            new PersonalRecord { Exercise = "Deadlift", Weight = 275, Date = DateTime.Now.AddDays(-10) }
        };
    }

    private async Task LoadUserData()
    {
        try
        {
            // TODO: Load actual user data from Supabase
            // This would include:
            // 1. User profile info
            // 2. Workout history
            // 3. PR data
            // 4. Progress metrics
            
            // For now using dummy data
            // In a real implementation, you'd query Supabase like:
            // var response = await SupabaseClient.From<Workout>().Select("*").Order("created_at", Postgrest.Constants.Ordering.Descending).Limit(10).Get();
            // var workouts = response.Models;
        }
        catch (Exception ex)
        {
            Snackbar.Add("Failed to load data: " + ex.Message, Severity.Error);
        }
    }

    private string GetMotivationalMessage()
    {
        string[] messages = {
            "Keep pushing your limits today!",
            "You're making great progress. Let's keep the momentum going!",
            "One more rep, one step closer to your goal.",
            $"You're on a {currentStreak}-day streak. Amazing consistency!",
            "Today is a great day to set a new personal record."
        };
        
        Random random = new Random();
        return messages[random.Next(messages.Length)];
    }

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void StartNewWorkout() => Navigation.NavigateTo("/workout/new");
    private void ViewHistory() => Navigation.NavigateTo("/history");
    private void ManageExercises() => Navigation.NavigateTo("/exercises");

    private async Task Logout()
    {
        await SupabaseClient.Auth.SignOut();
        Navigation.NavigateTo("/login", true);
    }
}